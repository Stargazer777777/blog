const t=JSON.parse('{"key":"v-38e8c474","path":"/notebook/TS%E7%AC%94%E8%AE%B0/9.%E5%87%BD%E6%95%B0%E7%B1%BB%E5%9E%8B.html","title":"函数类型","lang":"zh-CN","frontmatter":{"title":"函数类型","date":"2023-09-24T00:00:00.000Z","category":["TS"],"description":"通过type定义 type Func&lt;T&gt; = (p1: string) =&gt; T; const func: Func&lt;void&gt; = (p1) =&gt; { \\tconsole.log(p1); };","head":[["meta",{"property":"og:url","content":"https:///blog/blog/notebook/TS%E7%AC%94%E8%AE%B0/9.%E5%87%BD%E6%95%B0%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"Stargazer"}],["meta",{"property":"og:title","content":"函数类型"}],["meta",{"property":"og:description","content":"通过type定义 type Func&lt;T&gt; = (p1: string) =&gt; T; const func: Func&lt;void&gt; = (p1) =&gt; { \\tconsole.log(p1); };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-24T14:39:37.000Z"}],["meta",{"property":"article:published_time","content":"2023-09-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-24T14:39:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"函数类型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-24T14:39:37.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1695566377000,"updatedTime":1695566377000,"contributors":[{"name":"stargazer","email":"1601778118@qq.com","commits":1}]},"readingTime":{"minutes":0.16,"words":49},"filePathRelative":"notebook/TS笔记/9.函数类型.md","localizedDate":"2023年9月24日","excerpt":"<h4> 通过type定义</h4>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">type</span> <span class=\\"token class-name\\">Func<span class=\\"token operator\\">&lt;</span><span class=\\"token constant\\">T</span><span class=\\"token operator\\">&gt;</span></span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>p1<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token constant\\">T</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> func<span class=\\"token operator\\">:</span> Func<span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">void</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>p1<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>p1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
